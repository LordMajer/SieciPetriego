package com.petri.nets.gui;

public class ImprovedGUI extends javax.swing.JFrame {

    public ImprovedGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        modelMenu = new javax.swing.JMenu();
        newModelItem = new javax.swing.JMenuItem();
        loadModelItem = new javax.swing.JMenuItem();
        saveModelItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        isPriorityNetItem = new javax.swing.JCheckBoxMenuItem();
        editMenu = new javax.swing.JMenu();
        addPlaceMenu = new javax.swing.JMenuItem();
        addTransitionItem = new javax.swing.JMenuItem();
        addEdgeItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        EditElementItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        deleteElementItem = new javax.swing.JMenuItem();
        netRepresentationMenu = new javax.swing.JMenu();
        reachabilityGraphItem = new javax.swing.JMenuItem();
        coverabilityGraphItem = new javax.swing.JMenuItem();
        coverabilityTreeItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        inputMatrixItem = new javax.swing.JMenuItem();
        outputMatrixItem = new javax.swing.JMenuItem();
        incidenceMatrixItem = new javax.swing.JMenuItem();
        simulationMenu = new javax.swing.JMenu();
        startSimulationItem = new javax.swing.JMenuItem();
        netPropertiesMenu = new javax.swing.JMenu();
        safenessItem = new javax.swing.JMenuItem();
        boudednessItem = new javax.swing.JMenuItem();
        reversabilityItem = new javax.swing.JMenuItem();
        conservationItem = new javax.swing.JMenuItem();
        conservationByVectorItem = new javax.swing.JMenuItem();
        transitionLivenessItem = new javax.swing.JMenuItem();
        netLivenessItem = new javax.swing.JMenuItem();
        aboutProgramMenu = new javax.swing.JMenu();
        aboutAuthorsItem = new javax.swing.JMenuItem();
        shortcutsItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        modelMenu.setText("Sieć");

        newModelItem.setText("Nowa");
        newModelItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newModelItemActionPerformed(evt);
            }
        });
        modelMenu.add(newModelItem);

        loadModelItem.setText("Wczytaj");
        loadModelItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadModelItemActionPerformed(evt);
            }
        });
        modelMenu.add(loadModelItem);

        saveModelItem.setText("Zapisz");
        modelMenu.add(saveModelItem);
        modelMenu.add(jSeparator4);

        isPriorityNetItem.setText("Sieć priorytetowa");
        modelMenu.add(isPriorityNetItem);

        jMenuBar1.add(modelMenu);

        editMenu.setText("Edytuj");

        addPlaceMenu.setText("Dodaj miejsce");
        editMenu.add(addPlaceMenu);

        addTransitionItem.setText("Dodaj przejście");
        editMenu.add(addTransitionItem);

        addEdgeItem.setText("Dodaj krawędź");
        editMenu.add(addEdgeItem);
        editMenu.add(jSeparator1);

        EditElementItem.setText("Edytuj");
        editMenu.add(EditElementItem);
        editMenu.add(jSeparator3);

        deleteElementItem.setText("Usuń");
        editMenu.add(deleteElementItem);

        jMenuBar1.add(editMenu);

        netRepresentationMenu.setText("Reprezentacja");

        reachabilityGraphItem.setText("Graf osiągalności");
        netRepresentationMenu.add(reachabilityGraphItem);

        coverabilityGraphItem.setText("Graf pokrycia");
        netRepresentationMenu.add(coverabilityGraphItem);

        coverabilityTreeItem.setText("Drzewo pokrycia");
        netRepresentationMenu.add(coverabilityTreeItem);
        netRepresentationMenu.add(jSeparator2);

        inputMatrixItem.setText("Macierz wejść");
        netRepresentationMenu.add(inputMatrixItem);

        outputMatrixItem.setText("Macierz wyjść");
        netRepresentationMenu.add(outputMatrixItem);

        incidenceMatrixItem.setText("Macierz incydencji");
        netRepresentationMenu.add(incidenceMatrixItem);

        jMenuBar1.add(netRepresentationMenu);

        simulationMenu.setText("Symulacja");

        startSimulationItem.setText("Rozpocznij");
        simulationMenu.add(startSimulationItem);

        jMenuBar1.add(simulationMenu);

        netPropertiesMenu.setText("Właściwości");

        safenessItem.setText("Bezpieczeństwo sieci");
        netPropertiesMenu.add(safenessItem);

        boudednessItem.setText("K-ograniczoność miejsc");
        boudednessItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boudednessItemActionPerformed(evt);
            }
        });
        netPropertiesMenu.add(boudednessItem);

        reversabilityItem.setText("Odwracalność sieci");
        netPropertiesMenu.add(reversabilityItem);

        conservationItem.setText("Zachowawczość");
        conservationItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conservationItemActionPerformed(evt);
            }
        });
        netPropertiesMenu.add(conservationItem);

        conservationByVectorItem.setText("Zachowawczość względem wektora wag");
        netPropertiesMenu.add(conservationByVectorItem);

        transitionLivenessItem.setText("Żywotność przejść");
        netPropertiesMenu.add(transitionLivenessItem);

        netLivenessItem.setText("Żywotność sieci");
        netPropertiesMenu.add(netLivenessItem);

        jMenuBar1.add(netPropertiesMenu);

        aboutProgramMenu.setText("O programie");

        aboutAuthorsItem.setText("Autorzy");
        aboutProgramMenu.add(aboutAuthorsItem);

        shortcutsItem.setText("Skróty klawiszowe");
        aboutProgramMenu.add(shortcutsItem);

        jMenuBar1.add(aboutProgramMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 930, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void newModelItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newModelItemActionPerformed

    }//GEN-LAST:event_newModelItemActionPerformed

    private void loadModelItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadModelItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadModelItemActionPerformed

    private void boudednessItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boudednessItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boudednessItemActionPerformed

    private void conservationItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conservationItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_conservationItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImprovedGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImprovedGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImprovedGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImprovedGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImprovedGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem EditElementItem;
    private javax.swing.JMenuItem aboutAuthorsItem;
    private javax.swing.JMenu aboutProgramMenu;
    private javax.swing.JMenuItem addEdgeItem;
    private javax.swing.JMenuItem addPlaceMenu;
    private javax.swing.JMenuItem addTransitionItem;
    private javax.swing.JMenuItem boudednessItem;
    private javax.swing.JMenuItem conservationByVectorItem;
    private javax.swing.JMenuItem conservationItem;
    private javax.swing.JMenuItem coverabilityGraphItem;
    private javax.swing.JMenuItem coverabilityTreeItem;
    private javax.swing.JMenuItem deleteElementItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem incidenceMatrixItem;
    private javax.swing.JMenuItem inputMatrixItem;
    private javax.swing.JCheckBoxMenuItem isPriorityNetItem;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JMenuItem loadModelItem;
    private javax.swing.JMenu modelMenu;
    private javax.swing.JMenuItem netLivenessItem;
    private javax.swing.JMenu netPropertiesMenu;
    private javax.swing.JMenu netRepresentationMenu;
    private javax.swing.JMenuItem newModelItem;
    private javax.swing.JMenuItem outputMatrixItem;
    private javax.swing.JMenuItem reachabilityGraphItem;
    private javax.swing.JMenuItem reversabilityItem;
    private javax.swing.JMenuItem safenessItem;
    private javax.swing.JMenuItem saveModelItem;
    private javax.swing.JMenuItem shortcutsItem;
    private javax.swing.JMenu simulationMenu;
    private javax.swing.JMenuItem startSimulationItem;
    private javax.swing.JMenuItem transitionLivenessItem;
    // End of variables declaration//GEN-END:variables
}
